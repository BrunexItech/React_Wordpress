name: wordpress

services:
  db:
    image: mysql:8.0
    container_name: wordpress_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - webnet

  wordpress:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
    image: wordpress-with-wpcli
    container_name: wordpress_app
    restart: always
    depends_on:
      - db
    ports:
      - "${WORDPRESS_PORT:-8000}:80" # http://localhost:${WORDPRESS_PORT:-8000}
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}

      # --- first-boot install + site URLs (from .env) ---
      WP_HOME: ${WP_HOME}
      WP_SITEURL: ${WP_SITEURL}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_TITLE: ${WP_TITLE}

      # --- plugins to auto-activate ---
      WP_PLUGINS: ${WP_PLUGINS}

      # Optional: safer file writes & memory
      WORDPRESS_CONFIG_EXTRA: |
        define('FS_METHOD', 'direct');
        define('WP_MEMORY_LIMIT', '256M');

    volumes:
      # WordPress core in a named volume (persists WP install)
      - wordpress_data:/var/www/html

      # Ship your repoâ€™s wp-content (plugins/themes/uploads)
      - ./wp-content:/var/www/html/wp-content

      # Bootstrap script
      - ./docker-entrypoint-custom.sh:/usr/local/bin/docker-entrypoint-custom.sh

    # Use our bootstrap entrypoint; it will hand off to the original one
    entrypoint: [ "/usr/local/bin/docker-entrypoint-custom.sh" ]
    networks:
      - webnet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: wordpress_phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80" # http://localhost:${PHPMYADMIN_PORT:-8080}
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - webnet

  frontend:
    build:
      context: ./frontend
      args:
        VITE_WORDPRESS_GRAPHQL_URL: ${VITE_WORDPRESS_GRAPHQL_URL}
    container_name: vite_frontend_apache
    restart: always
    depends_on:
      - wordpress
    ports:
      - "${FRONTEND_PORT:-5173}:80" # http://localhost:${FRONTEND_PORT:-5173}
    networks:
      - webnet

volumes:
  db_data:
  wordpress_data:

networks:
  webnet:
