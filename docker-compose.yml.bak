name: wordpress

services:
  db:
    image: mysql:8.0
    container_name: wordpress_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - webnet

  wordpress:
    image: wordpress:php8.2-apache
    container_name: wordpress_app
    restart: always
    depends_on:
      - db
    ports:
      - "${WORDPRESS_PORT:-8000}:80" # WP Admin → http://localhost:${WORDPRESS_PORT:-8000}
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    # Keep core in a named volume; bind-mount ONLY wp-content from your repo
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
    networks:
      - webnet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: wordpress_phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80" # phpMyAdmin → http://localhost:${PHPMYADMIN_PORT:-8080}
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - webnet

  frontend:
    # Apache-based frontend container
    build:
      context: ./frontend
      args:
        # Apollo uses /graphql; Apache vhost proxies this to the wordpress service
        VITE_WORDPRESS_GRAPHQL_URL: /graphql
    container_name: vite_frontend_apache
    restart: always
    depends_on:
      - wordpress
    ports:
      - "${FRONTEND_PORT:-5173}:80" # Frontend → http://localhost:${FRONTEND_PORT:-5173}
    networks:
      - webnet

volumes:
  db_data:
  wordpress_data:

networks:
  webnet:
